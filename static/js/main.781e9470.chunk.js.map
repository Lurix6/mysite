{"version":3,"sources":["components/MusicElement.js","components/DB.js","components/App.js","serviceWorker.js","index.js"],"names":["MusicElement","_ref","element","react_default","a","createElement","className","src","icon","alt","executor","title","full_time","musics","url_link","App","components_MusicElement","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0PAuBeA,MApBf,SAAAC,GAAiC,IAAVC,EAAUD,EAAVC,QAEtB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAQM,KAAMC,IAAI,KAC5BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,YAAOH,EAAQQ,UACfP,EAAAC,EAAAC,cAAA,YAAOH,EAAQS,SAGjBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbJ,EAAQU,aCDAC,EAAS,CACpB,CACCH,SAAW,cACXC,MAAQ,2CACRH,KAAO,mEACPM,SAAW,wDACXF,UAAa,QACZ,CACDF,SAAW,cACXC,MAAQ,2CACRH,KAAQ,kEACRM,SAAW,wDACXF,UAAY,UCXAG,mLAPX,OACCZ,EAAAC,EAAAC,cAACW,EAAD,CAAcd,QAASW,EAAO,YAHjBI,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,eDqH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.781e9470.chunk.js","sourcesContent":["import React from 'react'\nimport './MusicElement.css'\n\nfunction MusicElement({element}) {\n\n\treturn(\t\n\t\t<div className=\"root\">\n\t\t\t<div>\n\t\t\t\t<img src={element.icon} alt=\"\" />\n\t\t\t\t<div className=\"list_music_inf\">\n\t\t\t\t\t<span>{element.executor}</span>\n\t\t\t\t\t<span>{element.title}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"list_music_time\">\n\t\t\t\t{element.full_time}\n\t\t\t</div>\n\t\t</div>\n)\n\n}\n\n\nexport default MusicElement","export let Account = [\n{   id:'0000',\n\tname:'Vasya Popovich',\n\timg:'../img/account/0000/img',\n\trating:'10',\n\tbackground:'../img/account/0000/img',\n\tpersonalDate : [{\n\t\tcountry:'Україна',\n\t\tcity:'Ужгород',\n\t\tlanguage:'Українська',\n\t\tbirthday:'19 жовтня 1997',\n\t}]\n}]\n\nexport const musics = [\n\t\t{\n\t\t\t\"executor\":\"Alan Walker\",\n\t\t\t\"title\":\"Darkside (feat. Au/Ra and Tomine Harket)\",\n\t\t\t\"icon\":\"https://pp.userapi.com/c834303/v834303863/18f3d4/zcxfviEegeU.jpg\",\n\t\t\t\"url_link\":\"http://taimp3nhanh.com/stream/stream.php?id=480275022\",\n\t\t\t\"full_time\": \"3:50\"\n\t\t},{\n\t\t\t\"executor\":\"Alan Walker\",\n\t\t\t\"title\":\"New Day (Official Video) [New Song 2018]\",\n\t\t\t\"icon\": \"https://pp.userapi.com/c639721/v639721949/5131e/-bf4PRxQZ40.jpg\",\n\t\t\t\"url_link\":\"http://taimp3nhanh.com/stream/stream.php?id=473944656\",\t\t\n\t\t\t\"full_time\":\"'3:50\"\n\n\t\t}\n\t]\n\n\t\t// {\n\t\t// \texecutor:'Alan Walker',\n\t\t// \ttitle:'The Spectre',\n\t\t// \ticon:'https://pp.userapi.com/c639721/v639721949/5131e/-bf4PRxQZ40.jpg',\n\t\t// \turl_link:'http://taimp3nhanh.com/stream/stream.php?id=309831866',\n\t\t// \tfull_time: '3:50'\n\t\t// },{\n\t\t// \texecutor:'Alan Walker',\n\t\t// \ttitle:'Fade [NCS Release]',\n\t\t// \ticon:'https://pp.userapi.com/c639721/v639721949/5131e/-bf4PRxQZ40.jpg',\n\t\t// \turl_link:'http://taimp3nhanh.com/stream/stream.php?id=177671751',\n\t\t// \tfull_time: '3:50'\n\t\t// },{\n\t\t// \texecutor:'Simple Plan',\n\t\t// \ttitle:'Take My Hand',\n\t\t// \ticon:'https://pp.userapi.com/c636816/v636816452/7517a/ksYp012gDwM.jpg',\n\t\t// \turl_link:'http://taimp3nhanh.com/stream/stream.php?id=177671751',\n\t\t// \tfull_time: '3:50'\n\t\t// },{\n\t\t// \texecutor:'Shinedown',\n\t\t// \ttitle:'My Name [Wearing Me Out]',\n\t\t// \ticon:'https://pp.userapi.com/c636816/v636816452/66e65/7-iDZ9DvGhA.jpg',\n\t\t// \turl_link:'http://taimp3nhanh.com/stream/stream.php?id=177671751',\n\t\t// \tfull_time: '3:50'\n\t\t// },{\n\t\t// \texecutor:'Leader',\n\t\t// \ttitle:'Warrior Inside',\n\t\t// \ticon: null,\n\t\t// \turl_link:'http://taimp3nhanh.com/stream/stream.php?id=177671751',\n\t\t// \tfull_time: '3:50'\n\t\t// }]","import React, { Component } from 'react';\nimport './App.css';\nimport MusicElement from './MusicElement'\nimport {musics} from './DB'\n\n\nclass App extends Component {\n  render() {\n    return (\n   \t\t<MusicElement element={musics[0]}/>\n    );\n \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('list_music'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}